
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf 
Author: Kaan Tezcan (https://sketchfab.com/kaanpirate)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/free-game-character-ancient-19e18c8e8d5941deb3f9dd0a2a349b56
Title: Free Game Character - Ancient
*/
'use client'
import React, {useEffect} from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/spartak/scene.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions && animations.length > 0) {
      const actionName = animations[0].name // Берем первую анимацию
      actions[actionName]?.play() // Запускаем анимацию
    }
  }, [actions, animations])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="042b8bc53dd94ecda2a9117428da0c7bfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Armature">
                  <group name="Object_5">
                    <primitive object={nodes._rootJoint} />
                    <group name="Object_98" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_100" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_102" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_104" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <group name="Object_106" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                    <skinnedMesh name="Object_99" geometry={nodes.Object_99.geometry} material={materials['Legs.001']} skeleton={nodes.Object_99.skeleton} />
                    <skinnedMesh name="Object_101" geometry={nodes.Object_101.geometry} material={materials['Arm.001']} skeleton={nodes.Object_101.skeleton} />
                    <skinnedMesh name="Object_103" geometry={nodes.Object_103.geometry} material={materials['Chest.001']} skeleton={nodes.Object_103.skeleton} />
                    <skinnedMesh name="Object_105" geometry={nodes.Object_105.geometry} material={materials['Mask.002']} skeleton={nodes.Object_105.skeleton} />
                    <skinnedMesh name="Object_107" geometry={nodes.Object_107.geometry} material={materials['Helmet.001']} skeleton={nodes.Object_107.skeleton} />
                  </group>
                </group>
                <group name="Legs" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Arm" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Chest" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Mask" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
                <group name="Helmet" rotation={[-Math.PI / 2, 0, 0]} scale={100} />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/spartak/scene.gltf')
