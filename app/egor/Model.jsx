/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 scene.gltf 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Model(props) {
  const { scene } = useGLTF('/glb/scene.gltf')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  console.dir(nodes)
  return (
    <group {...props} dispose={null}>
      <PerspectiveCamera makeDefault={false} far={1000} near={0.1} fov={39.598} position={[-4.694, 0.511, -5.379]} rotation={[-3.132, -0.698, -3.136]} />
      <spotLight intensity={540.131} angle={0.035} penumbra={0.15} decay={2} position={[0, 12.583, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={1.158} target={nodes.Area.target}>
        <primitive object={nodes.Area.target} position={[0, 0, -1]} />
      </spotLight>
      <mesh geometry={nodes.Suzanne.geometry} material={materials.Skin} />
    </group>
  )
}

useGLTF.preload('/scene.gltf')
